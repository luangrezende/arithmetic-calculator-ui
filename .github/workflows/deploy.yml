name: Deploy Frontend to AWS S3 + CloudFront

on:
    push:
        branches:
            - master

jobs:
    deploy:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Setup Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: 20
                  cache: 'yarn'

            - name: Cache dependencies
              uses: actions/cache@v3
              with:
                  path: |
                      ~/.yarn
                      node_modules
                  key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-yarn-

            - name: Install dependencies
              run: yarn install --frozen-lockfile

            - name: Run linting
              run: yarn lint

            - name: Type check
              run: yarn tsc --noEmit

            - name: Build project
              run: yarn build
              env:
                  VITE_USER_API_URL: ${{ secrets.VITE_USER_API_URL }}
                  VITE_OPERATIONS_API_URL: ${{ secrets.VITE_OPERATIONS_API_URL }}
                  VITE_API_ENVIRONMENT: production

            - name: Verify build output
              run: |
                  if [ ! -f "dist/index.html" ]; then
                    echo "Build failed: index.html not found in dist/"
                    exit 1
                  fi
                  echo "Build successful: dist/index.html found"
                  ls -la dist/

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v2
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: us-east-1

            - name: Deploy to S3
              run: |
                  aws s3 sync dist/ s3://${{ secrets.AWS_S3_BUCKET }} --delete --cache-control "public, max-age=31536000" --exclude "*.html" --exclude "service-worker.js"
                  aws s3 sync dist/ s3://${{ secrets.AWS_S3_BUCKET }} --delete --cache-control "public, max-age=0, must-revalidate" --include "*.html" --include "service-worker.js"

            - name: Configure S3 website hosting
              run: |
                  aws s3 website s3://${{ secrets.AWS_S3_BUCKET }} --index-document index.html --error-document index.html

            - name: Invalidate CloudFront
              run: |
                  aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"
